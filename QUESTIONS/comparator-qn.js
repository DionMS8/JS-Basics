// EXPLAIN WHY THE FIRST COMPARISON IS CORRECT
// AND THE SECOND COMPARISON IS WRONG.

1 < 2 < 3; // "TRUE"

3 > 2 > 1; // "FALSE"

// ANSWER:

// - OPERATIONS ARE CALCULATED FROM LEFT TO RIGHT

// - FOR MOST PROGRAMMING LANGUAGES, VALUE 
// COMPARATORS ALWAYS RETURN A BOOLEAN VALUE

// - TRUE/FALSE IS EQUAL TO 1 BIT, WHICH IS EITHER 
// A VALUE OF 1 OR 0

// (1 < 2) = TRUE =  1, 1 < 3 = TRUE

// (3 > 2) = TRUE = 1, 1 > 1 = FALSE

